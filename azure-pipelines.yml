# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
  - task: DotNetCoreCLI@2
    displayName: Unit Tests
    inputs:
      command: 'test'
      projects: '**/Challenges.CommentsRemover.UnitTests.csproj'
      arguments: ' --collect "XPlat Code coverage"'
      testRunTitle: 'Unit Tests'
      
  - script: |
      dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8
      reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
    displayName: 'ReportGenerator tool'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura  
      summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'
      
  - task: BuildQualityChecks@8
    inputs:
      checkCoverage: true
      coverageFailOption: 'fixed'
      coverageType: 'lines'
      coverageThreshold: '70'
      runTitle: 'Checking Coverage'

  - script: |
      dotnet tool install --global CheckCoverage --version 1.0.0
    displayName: 'Install check'  

  - script: |
      checkcoverage
    displayName: 'CheckCoverage'